---
# tasks file for ocp-prep
# go here to get your long lived access toekn https://cloud.redhat.com/openshift/token
- name: Generate access token with offline token
  uri:
    url: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
    method: POST
    body_format: form-urlencoded
    body:
    - [ grant_type, refresh_token ]
    - [ client_id, cloud-services ]
    - [ refresh_token, "{{ vault_token_long }}" ]
  register: access_tokens

- name: Generate pull secret from access_token
  uri:
    url: https://api.openshift.com/api/accounts_mgmt/v1/access_token
    method: POST
    headers:
      Content-Type: application/yaml
      Authorization: Bearer {{ access_tokens.json.access_token }}
  register: pull_secret

- name: Create a directory for OCP install
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop: "{{ ocp_folders }}"

- name: Download VM image for install
  get_url:
    url: "{{ item }}"
    dest: "{{ ign_folder }}"
  loop:
    - "{{ ocp_image_url }}{{ ocp_image }}"
    - "{{ ocp_image_url }}{{ ocp_kernel }}"
    - "{{ ocp_image_url }}{{ ocp_ramfs }}"

- name: Unarchive files to install directory
  unarchive:
    src: "{{ item }}"
    dest: "{{ openshift_install_dir }}"
    remote_src: yes
  loop:
    - "{{ ocp_installer_url }}{{ ocp_installer }}"
    - "{{ ocp_client_url }}{{ ocp_client }}"

- name: Generate SSH keys on Bastion
  openssh_keypair:
    path: /root/.ssh/id_rsa
  register: sshkey

- name: Template a ignition file to bastion install folder
  template:
    src: install-config.yaml.j2
    dest: "{{ ign_folder }}install-config.yaml"

- name: Template a .treeinfo to bastion install folder
  template:
    src: .treeinfo.j2
    dest: "{{ ign_folder }}.treeinfo"

- name: Create ignition files
  command: "{{ openshift_install_dir }}openshift-install create ignition-configs"
  args:
    chdir: "{{ ign_folder }}"
